{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useMemo } from \"react\";\nexport const useSortedTasks = (tasks, sort) => {\n  _s();\n  const sortedTasks = useMemo(() => {\n    if (sort) {\n      if (sort !== 'date') {\n        return [...tasks].sort((a, b) => a[sort].localeCompare(b[sort]));\n      } else {\n        return [...tasks].sort((a, b) => new Date(a[sort]) - new Date(b[sort]));\n      }\n    } else {\n      return tasks;\n    }\n  }, [sort, tasks]);\n  return sortedTasks;\n};\n_s(useSortedTasks, \"WESwMQCkGxISLpy4sLyJtUX8pOs=\");\nexport const useTasks = (tasks, sort, filter) => {\n  _s2();\n  const sortedTasks = useSortedTasks(tasks, sort);\n  const filteredSortTasks = useMemo(() => {\n    let filteredTasks = sortedTasks;\n    if (filter.date) {\n      console.log(filter.date);\n      filteredTasks = filteredTasks.filter(task => task.date <= filter.date);\n    }\n    if (filter.status) {\n      filteredTasks = filteredTasks.filter(task => task.status === filter.status);\n    }\n    return filteredTasks;\n  }, [sortedTasks, filter.date, filter.status]);\n  return filteredSortTasks;\n};\n_s2(useTasks, \"HZgarp6JxofjEhmfwp0aXqs7l+E=\", false, function () {\n  return [useSortedTasks];\n});","map":{"version":3,"names":["useMemo","useSortedTasks","tasks","sort","sortedTasks","a","b","localeCompare","Date","useTasks","filter","filteredSortTasks","filteredTasks","date","console","log","task","status"],"sources":["/Users/viktorbelakov/Documents/Develop/tasks/src/hooks/useTasks.js"],"sourcesContent":["import {useMemo} from \"react\";\n\nexport const useSortedTasks = (tasks, sort) => {\n    const sortedTasks = useMemo(()=> {\n        if (sort) {\n            if(sort !== 'date'){\n                return [...tasks].sort((a, b) => a[sort].localeCompare(b[sort]))\n            }else{\n                return [...tasks].sort((a, b) => new Date(a[sort]) - new Date(b[sort]))\n            }\n        } else {\n            return tasks;\n        }\n    }, [sort, tasks])\n\n    return sortedTasks;\n}\n\nexport const useTasks = (tasks, sort, filter) => {\n    const sortedTasks = useSortedTasks(tasks, sort);\n    const filteredSortTasks = useMemo(()=> {\n        let filteredTasks = sortedTasks;\n        if (filter.date) { console.log(filter.date)\n            filteredTasks = filteredTasks.filter((task) => task.date <= filter.date);\n        }\n        if (filter.status) {\n            filteredTasks = filteredTasks.filter((task) => task.status === filter.status);\n        }\n        return filteredTasks;\n    }, [sortedTasks, filter.date, filter.status])\n    return filteredSortTasks;\n}"],"mappings":";;AAAA,SAAQA,OAAO,QAAO,OAAO;AAE7B,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,EAAEC,IAAI,KAAK;EAAA;EAC3C,MAAMC,WAAW,GAAGJ,OAAO,CAAC,MAAK;IAC7B,IAAIG,IAAI,EAAE;MACN,IAAGA,IAAI,KAAK,MAAM,EAAC;QACf,OAAO,CAAC,GAAGD,KAAK,CAAC,CAACC,IAAI,CAAC,CAACE,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACF,IAAI,CAAC,CAACI,aAAa,CAACD,CAAC,CAACH,IAAI,CAAC,CAAC,CAAC;MACpE,CAAC,MAAI;QACD,OAAO,CAAC,GAAGD,KAAK,CAAC,CAACC,IAAI,CAAC,CAACE,CAAC,EAAEC,CAAC,KAAK,IAAIE,IAAI,CAACH,CAAC,CAACF,IAAI,CAAC,CAAC,GAAG,IAAIK,IAAI,CAACF,CAAC,CAACH,IAAI,CAAC,CAAC,CAAC;MAC3E;IACJ,CAAC,MAAM;MACH,OAAOD,KAAK;IAChB;EACJ,CAAC,EAAE,CAACC,IAAI,EAAED,KAAK,CAAC,CAAC;EAEjB,OAAOE,WAAW;AACtB,CAAC;AAAA,GAdYH,cAAc;AAgB3B,OAAO,MAAMQ,QAAQ,GAAG,CAACP,KAAK,EAAEC,IAAI,EAAEO,MAAM,KAAK;EAAA;EAC7C,MAAMN,WAAW,GAAGH,cAAc,CAACC,KAAK,EAAEC,IAAI,CAAC;EAC/C,MAAMQ,iBAAiB,GAAGX,OAAO,CAAC,MAAK;IACnC,IAAIY,aAAa,GAAGR,WAAW;IAC/B,IAAIM,MAAM,CAACG,IAAI,EAAE;MAAEC,OAAO,CAACC,GAAG,CAACL,MAAM,CAACG,IAAI,CAAC;MACvCD,aAAa,GAAGA,aAAa,CAACF,MAAM,CAAEM,IAAI,IAAKA,IAAI,CAACH,IAAI,IAAIH,MAAM,CAACG,IAAI,CAAC;IAC5E;IACA,IAAIH,MAAM,CAACO,MAAM,EAAE;MACfL,aAAa,GAAGA,aAAa,CAACF,MAAM,CAAEM,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAKP,MAAM,CAACO,MAAM,CAAC;IACjF;IACA,OAAOL,aAAa;EACxB,CAAC,EAAE,CAACR,WAAW,EAAEM,MAAM,CAACG,IAAI,EAAEH,MAAM,CAACO,MAAM,CAAC,CAAC;EAC7C,OAAON,iBAAiB;AAC5B,CAAC;AAAA,IAbYF,QAAQ;EAAA,QACGR,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}