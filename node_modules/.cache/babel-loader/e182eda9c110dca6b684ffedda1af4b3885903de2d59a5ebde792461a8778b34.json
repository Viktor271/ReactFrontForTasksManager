{"ast":null,"code":"var _jsxFileName = \"/Users/viktorbelakov/Documents/Develop/tasks/src/\\u0441omponents/TaskItem.jsx\";\nimport React from 'react';\nimport MyButton from \"./UI/button/MyButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = props => {\n  const handleEdit = (taskId, newTitle, newStatus) => {\n    // const updatedTasks = tasks.map((task) => {\n    //     if (task.id === taskId) {\n    //         return { ...task, title: newTitle, status: newStatus };\n    //     }\n    //     return task;\n    // });\n    // setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"Task_block\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.task.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.task.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.task.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.task.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n        onClick: () => handleEdit(props.task.id, 'new text', 'completed'),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n        onClick: () => props.remove(props.task.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, props.task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","MyButton","TaskItem","props","handleEdit","taskId","newTitle","newStatus","task","id","title","date","status","body","remove"],"sources":["/Users/viktorbelakov/Documents/Develop/tasks/src/сomponents/TaskItem.jsx"],"sourcesContent":["import React from 'react';\nimport MyButton from \"./UI/button/MyButton\";\n\nconst TaskItem = (props) => {\n\n    const handleEdit = (taskId, newTitle, newStatus) => {\n        // const updatedTasks = tasks.map((task) => {\n        //     if (task.id === taskId) {\n        //         return { ...task, title: newTitle, status: newStatus };\n        //     }\n        //     return task;\n        // });\n        // setTasks(updatedTasks);\n    };\n\n\n\n    return (\n        <div>\n            <li className=\"Task_block\" key={props.task.id}>\n                <p>{props.task.id}</p>\n                <p>{props.task.title}</p>\n                <p>{props.task.date}</p>\n                <p>{props.task.status}</p>\n                <p>{props.task.body}</p>\n                <MyButton  onClick={() => handleEdit(props.task.id, 'new text', 'completed')}>Edit</MyButton>\n                <MyButton  onClick={() => props.remove(props.task.id)}>Delete</MyButton>\n            </li>\n        </div>\n    );\n};\n\nexport default TaskItem;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,sBAAsB;AAAC;AAE5C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAExB,MAAMC,UAAU,GAAG,CAACC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,KAAK;IAChD;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACH;EAID,oBACI;IAAA,uBACI;MAAI,SAAS,EAAC,YAAY;MAAA,wBACtB;QAAA,UAAIJ,KAAK,CAACK,IAAI,CAACC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAK,eACtB;QAAA,UAAIN,KAAK,CAACK,IAAI,CAACE;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,eACzB;QAAA,UAAIP,KAAK,CAACK,IAAI,CAACG;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK,eACxB;QAAA,UAAIR,KAAK,CAACK,IAAI,CAACI;MAAM;QAAA;QAAA;QAAA;MAAA,QAAK,eAC1B;QAAA,UAAIT,KAAK,CAACK,IAAI,CAACK;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK,eACxB,QAAC,QAAQ;QAAE,OAAO,EAAE,MAAMT,UAAU,CAACD,KAAK,CAACK,IAAI,CAACC,EAAE,EAAE,UAAU,EAAE,WAAW,CAAE;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAW,eAC7F,QAAC,QAAQ;QAAE,OAAO,EAAE,MAAMN,KAAK,CAACW,MAAM,CAACX,KAAK,CAACK,IAAI,CAACC,EAAE,CAAE;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAW;IAAA,GAP5CN,KAAK,CAACK,IAAI,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA;EAQxC;IAAA;IAAA;IAAA;EAAA,QACH;AAEd,CAAC;AAAC,KA3BIP,QAAQ;AA6Bd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}