{"ast":null,"code":"var _jsxFileName = \"/Users/viktorbelakov/Documents/Develop/tasks/src/\\u0441omponents/TaskItem.jsx\";\nimport React from 'react';\nimport MyButton from \"./UI/button/MyButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = props => {\n  const handleEdit = (taskId, newTitle, newStatus) => {\n    // const updatedTasks = tasks.map((task) => {\n    //     if (task.id === taskId) {\n    //         return { ...task, title: newTitle, status: newStatus };\n    //     }\n    //     return task;\n    // });\n    // setTasks(updatedTasks);\n  };\n  const handleDelete = taskId => {\n    // const dueDate = new Date(tasks.find((task) => task.id === taskId).date);\n    // const today = new Date();\n    // if (dueDate < today.setDate(today.getDate() - 6)) {\n    //     const updatedTasks = tasks.filter((task) => task.id !== taskId);\n    //     setTasks(updatedTasks);\n    // } else {\n    //     alert(\"Task can't be deleted as it's due date is less than 6 days from today.\");\n    // }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"Task_block\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.task.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.task.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.task.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n        onClick: () => handleEdit(props.task.id, 'new text', 'completed'),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n        onClick: () => handleDelete(props.task.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, props.task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","MyButton","TaskItem","props","handleEdit","taskId","newTitle","newStatus","handleDelete","task","title","date","status","body","id"],"sources":["/Users/viktorbelakov/Documents/Develop/tasks/src/сomponents/TaskItem.jsx"],"sourcesContent":["import React from 'react';\nimport MyButton from \"./UI/button/MyButton\";\n\nconst TaskItem = (props) => {\n\n    const handleEdit = (taskId, newTitle, newStatus) => {\n        // const updatedTasks = tasks.map((task) => {\n        //     if (task.id === taskId) {\n        //         return { ...task, title: newTitle, status: newStatus };\n        //     }\n        //     return task;\n        // });\n        // setTasks(updatedTasks);\n    };\n\n    const handleDelete = (taskId) => {\n        // const dueDate = new Date(tasks.find((task) => task.id === taskId).date);\n        // const today = new Date();\n        // if (dueDate < today.setDate(today.getDate() - 6)) {\n        //     const updatedTasks = tasks.filter((task) => task.id !== taskId);\n        //     setTasks(updatedTasks);\n        // } else {\n        //     alert(\"Task can't be deleted as it's due date is less than 6 days from today.\");\n        // }\n    };\n\n    return (\n        <div>\n            <li className=\"Task_block\" key={props.task.id}>\n                <p>{props.task.title}</p>\n                <p>{props.task.date}</p>\n                <p>{props.task.status}</p>\n                <p>{props.task.body}</p>\n                <MyButton  onClick={() => handleEdit(props.task.id, 'new text', 'completed')}>Edit</MyButton>\n                <MyButton  onClick={() => handleDelete(props.task.id)}>Delete</MyButton>\n            </li>\n        </div>\n    );\n};\n\nexport default TaskItem;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,sBAAsB;AAAC;AAE5C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAExB,MAAMC,UAAU,GAAG,CAACC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,KAAK;IAChD;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACH;EAED,MAAMC,YAAY,GAAIH,MAAM,IAAK;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACH;EAED,oBACI;IAAA,uBACI;MAAI,SAAS,EAAC,YAAY;MAAA,wBACtB;QAAA,UAAIF,KAAK,CAACM,IAAI,CAACC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,eACzB;QAAA,UAAIP,KAAK,CAACM,IAAI,CAACE;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK,eACxB;QAAA,UAAIR,KAAK,CAACM,IAAI,CAACG;MAAM;QAAA;QAAA;QAAA;MAAA,QAAK,eAC1B;QAAA,UAAIT,KAAK,CAACM,IAAI,CAACI;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK,eACxB,QAAC,QAAQ;QAAE,OAAO,EAAE,MAAMT,UAAU,CAACD,KAAK,CAACM,IAAI,CAACK,EAAE,EAAE,UAAU,EAAE,WAAW,CAAE;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAW,eAC7F,QAAC,QAAQ;QAAE,OAAO,EAAE,MAAMN,YAAY,CAACL,KAAK,CAACM,IAAI,CAACK,EAAE,CAAE;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAW;IAAA,GAN5CX,KAAK,CAACM,IAAI,CAACK,EAAE;MAAA;MAAA;MAAA;IAAA;EAOxC;IAAA;IAAA;IAAA;EAAA,QACH;AAEd,CAAC;AAAC,KAnCIZ,QAAQ;AAqCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}