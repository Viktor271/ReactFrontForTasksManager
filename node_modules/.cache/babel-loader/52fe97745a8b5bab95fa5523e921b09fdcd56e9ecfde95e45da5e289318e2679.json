{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport const useFatching = callback => {\n  _s();\n  const [isLoading, setIsTasksLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const fetching = async () => {\n    try {\n      setIsTasksLoading(true);\n      await callback();\n    } catch (e) {\n      setError(e.message);\n    } finally {\n      setIsTasksLoading(false);\n    }\n  };\n  return [fetching, isLoading, error];\n};\n_s(useFatching, \"Ih5W2vS2GR8aDAMxISpMWipLdJQ=\");","map":{"version":3,"names":["useState","useFatching","callback","isLoading","setIsTasksLoading","error","setError","fetching","e","message"],"sources":["/Users/viktorbelakov/Documents/Develop/tasks/src/hooks/useFatching.js"],"sourcesContent":["import {useState} from \"react\";\n\nexport const useFatching = (callback) => {\n    const [isLoading, setIsTasksLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const fetching = async ()=> {\n        try{\n            setIsTasksLoading(true)\n            await callback()\n        }catch (e){\n            setError(e.message)\n        }finally {\n            setIsTasksLoading(false)\n        }\n    }\n    return [fetching, isLoading, error];\n}"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAE9B,OAAO,MAAMC,WAAW,GAAIC,QAAQ,IAAK;EAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,iBAAiB,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACtD,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMO,QAAQ,GAAG,YAAW;IACxB,IAAG;MACCH,iBAAiB,CAAC,IAAI,CAAC;MACvB,MAAMF,QAAQ,EAAE;IACpB,CAAC,QAAOM,CAAC,EAAC;MACNF,QAAQ,CAACE,CAAC,CAACC,OAAO,CAAC;IACvB,CAAC,SAAQ;MACLL,iBAAiB,CAAC,KAAK,CAAC;IAC5B;EACJ,CAAC;EACD,OAAO,CAACG,QAAQ,EAAEJ,SAAS,EAAEE,KAAK,CAAC;AACvC,CAAC;AAAA,GAfYJ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}