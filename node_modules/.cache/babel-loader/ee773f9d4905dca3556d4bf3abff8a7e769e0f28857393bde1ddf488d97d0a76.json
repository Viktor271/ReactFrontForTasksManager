{"ast":null,"code":"var _jsxFileName = \"/Users/viktorbelakov/Documents/Develop/tasks/src/\\u0441omponents/TasksList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TasksList = () => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    date: '2022-01-01',\n    status: 'completed',\n    title: 'Task 1',\n    body: 'Task Body 1'\n  }, {\n    id: 2,\n    date: '2022-02-01',\n    status: 'in progress',\n    title: 'Task 2',\n    body: 'Task Body 2'\n  }, {\n    id: 3,\n    date: '2022-03-01',\n    status: 'pending',\n    title: 'Task 3',\n    body: 'Task Body 3'\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TasksList\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"Task_content\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"Task_block\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"Task_block\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Task_button\",\n          onClick: () => handleEdit(task.id, 'new text', 'completed'),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Task_button\",\n          onClick: () => handleDelete(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_s(TasksList, \"uTukGoGTq7sJciqCtRVk4EkV99M=\");\n_c = TasksList;\nexport default TasksList;\nvar _c;\n$RefreshReg$(_c, \"TasksList\");","map":{"version":3,"names":["React","useState","TasksList","tasks","setTasks","id","date","status","title","body","map","task","handleEdit","handleDelete"],"sources":["/Users/viktorbelakov/Documents/Develop/tasks/src/сomponents/TasksList.jsx"],"sourcesContent":["import React, {useState} from 'react';\n\nconst TasksList = () => {\n\n    const [tasks, setTasks] = useState([\n        { id: 1, date: '2022-01-01', status: 'completed', title: 'Task 1', body: 'Task Body 1' },\n        { id: 2, date: '2022-02-01', status: 'in progress', title: 'Task 2', body: 'Task Body 2' },\n        { id: 3, date: '2022-03-01', status: 'pending', title: 'Task 3', body: 'Task Body 3' },\n    ]);\n\n    return (\n        <div className=\"TasksList\">\n                <ul className=\"Task_content\">\n                    <li className=\"Task_block\">\n                        <p>Title</p>\n                        <p>Date</p>\n                        <p>Status</p>\n                        <p>Body</p>\n                        <p></p><p></p><p></p>\n                    </li>\n                    {tasks.map((task) => (\n                        <li className=\"Task_block\" key={task.id}>\n                            <p>{task.title}</p>\n                            <p>{task.date}</p>\n                            <p>{task.status}</p>\n                            <p>{task.body}</p>\n                            <button className=\"Task_button\" onClick={() => handleEdit(task.id, 'new text', 'completed')}>Edit</button>\n                            <button className=\"Task_button\" onClick={() => handleDelete(task.id)}>Delete</button>\n                        </li>\n                    ))}\n                </ul>\n        </div>\n    );\n};\n\nexport default TasksList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC;AAEtC,MAAMC,SAAS,GAAG,MAAM;EAAA;EAEpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,CAC/B;IAAEI,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE,WAAW;IAAEC,KAAK,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAc,CAAC,EACxF;IAAEJ,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE,aAAa;IAAEC,KAAK,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAc,CAAC,EAC1F;IAAEJ,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE,SAAS;IAAEC,KAAK,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAc,CAAC,CACzF,CAAC;EAEF,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,uBAClB;MAAI,SAAS,EAAC,cAAc;MAAA,wBACxB;QAAI,SAAS,EAAC,YAAY;QAAA,wBACtB;UAAA,UAAG;QAAK;UAAA;UAAA;UAAA;QAAA,QAAI,eACZ;UAAA,UAAG;QAAI;UAAA;UAAA;UAAA;QAAA,QAAI,eACX;UAAA,UAAG;QAAM;UAAA;UAAA;UAAA;QAAA,QAAI,eACb;UAAA,UAAG;QAAI;UAAA;UAAA;UAAA;QAAA,QAAI,eACX;UAAA;UAAA;UAAA;QAAA,QAAO;UAAA;UAAA;UAAA;QAAA,QAAO;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QACpB,EACJN,KAAK,CAACO,GAAG,CAAEC,IAAI,iBACZ;QAAI,SAAS,EAAC,YAAY;QAAA,wBACtB;UAAA,UAAIA,IAAI,CAACH;QAAK;UAAA;UAAA;UAAA;QAAA,QAAK,eACnB;UAAA,UAAIG,IAAI,CAACL;QAAI;UAAA;UAAA;UAAA;QAAA,QAAK,eAClB;UAAA,UAAIK,IAAI,CAACJ;QAAM;UAAA;UAAA;UAAA;QAAA,QAAK,eACpB;UAAA,UAAII,IAAI,CAACF;QAAI;UAAA;UAAA;UAAA;QAAA,QAAK,eAClB;UAAQ,SAAS,EAAC,aAAa;UAAC,OAAO,EAAE,MAAMG,UAAU,CAACD,IAAI,CAACN,EAAE,EAAE,UAAU,EAAE,WAAW,CAAE;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS,eAC1G;UAAQ,SAAS,EAAC,aAAa;UAAC,OAAO,EAAE,MAAMQ,YAAY,CAACF,IAAI,CAACN,EAAE,CAAE;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA,GANzDM,IAAI,CAACN,EAAE;QAAA;QAAA;QAAA;MAAA,QAQ1C,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACP;AAEd,CAAC;AAAC,GA/BIH,SAAS;AAAA,KAATA,SAAS;AAiCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}