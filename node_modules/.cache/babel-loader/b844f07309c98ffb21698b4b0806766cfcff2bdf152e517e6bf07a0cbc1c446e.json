{"ast":null,"code":"var _jsxFileName = \"/Users/viktorbelakov/Documents/Develop/tasks/src/\\u0441omponents/TasksList.jsx\";\nimport React, { useState } from 'react';\nimport TaskItem from \"./TaskItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TasksList = _ref => {\n  let {\n    tasks\n  } = _ref;\n  // const [tasks, setTasks] = useState([\n  //     { id: 1, date: '2022-01-01', status: 'completed', title: 'Task 1', body: 'Task Body 1' },\n  //     { id: 2, date: '2022-02-01', status: 'in progress', title: 'Task 2', body: 'Task Body 2' },\n  //     { id: 3, date: '2022-03-01', status: 'pending', title: 'Task 3', body: 'Task Body 3' },\n  // ]);\n  //\n  // const handleEdit = (taskId, newTitle, newStatus) => {\n  //     const updatedTasks = tasks.map((task) => {\n  //         if (task.id === taskId) {\n  //             return { ...task, title: newTitle, status: newStatus };\n  //         }\n  //         return task;\n  //     });\n  //     setTasks(updatedTasks);\n  // };\n\n  // const handleDelete = (taskId) => {\n  //     const dueDate = new Date(tasks.find((task) => task.id === taskId).date);\n  //     const today = new Date();\n  //     if (dueDate < today.setDate(today.getDate() - 6)) {\n  //         const updatedTasks = tasks.filter((task) => task.id !== taskId);\n  //         setTasks(updatedTasks);\n  //     } else {\n  //         alert(\"Task can't be deleted as it's due date is less than 6 days from today.\");\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n      task: task\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_c = TasksList;\nexport default TasksList;\nvar _c;\n$RefreshReg$(_c, \"TasksList\");","map":{"version":3,"names":["React","useState","TaskItem","TasksList","tasks","map","task","id"],"sources":["/Users/viktorbelakov/Documents/Develop/tasks/src/сomponents/TasksList.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport TaskItem from \"./TaskItem\";\n\nconst TasksList = ({tasks}) => {\n\n    // const [tasks, setTasks] = useState([\n    //     { id: 1, date: '2022-01-01', status: 'completed', title: 'Task 1', body: 'Task Body 1' },\n    //     { id: 2, date: '2022-02-01', status: 'in progress', title: 'Task 2', body: 'Task Body 2' },\n    //     { id: 3, date: '2022-03-01', status: 'pending', title: 'Task 3', body: 'Task Body 3' },\n    // ]);\n    //\n    // const handleEdit = (taskId, newTitle, newStatus) => {\n    //     const updatedTasks = tasks.map((task) => {\n    //         if (task.id === taskId) {\n    //             return { ...task, title: newTitle, status: newStatus };\n    //         }\n    //         return task;\n    //     });\n    //     setTasks(updatedTasks);\n    // };\n\n    // const handleDelete = (taskId) => {\n    //     const dueDate = new Date(tasks.find((task) => task.id === taskId).date);\n    //     const today = new Date();\n    //     if (dueDate < today.setDate(today.getDate() - 6)) {\n    //         const updatedTasks = tasks.filter((task) => task.id !== taskId);\n    //         setTasks(updatedTasks);\n    //     } else {\n    //         alert(\"Task can't be deleted as it's due date is less than 6 days from today.\");\n    //     }\n    // };\n\n    return (\n        <div>\n                {tasks.map(task =>\n                    <TaskItem task = {task} key={task.id}/>\n                )}\n        </div>\n    );\n};\n\nexport default TasksList;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,MAAMC,SAAS,GAAG,QAAa;EAAA,IAAZ;IAACC;EAAK,CAAC;EAEtB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACI;IAAA,UACSA,KAAK,CAACC,GAAG,CAACC,IAAI,iBACX,QAAC,QAAQ;MAAC,IAAI,EAAIA;IAAK,GAAMA,IAAI,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAC1C;IAAA;IAAA;IAAA;EAAA,QACH;AAEd,CAAC;AAAC,KApCIJ,SAAS;AAsCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}