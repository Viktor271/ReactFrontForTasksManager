{"ast":null,"code":"var _jsxFileName = \"/Users/viktorbelakov/Documents/Develop/tasks/src/\\u0441omponents/TaskItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MyButton from \"./UI/button/MyButton\";\nimport TaskForm from \"./TaskForm\";\nimport MyModal from \"./UI/MyModal/MyModal\";\nimport TaskUpdate from \"./TaskUpdate\";\nimport format from 'date-fns/format';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = props => {\n  _s();\n  const [modal, setModal] = useState(false);\n  const taskUpdated = () => {\n    setModal(false);\n  };\n  const columns = [{\n    field: 'firstName',\n    headerName: 'First name',\n    width: 150,\n    editable: true\n  }, {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 150,\n    editable: true\n  }, {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 110,\n    editable: true\n  }, {\n    field: 'fullName',\n    headerName: 'Full name',\n    description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    width: 160,\n    valueGetter: params => `${params.getValue(params.id, 'firstName') || ''} ${params.getValue(params.id, 'lastName') || ''}`\n  }];\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n      children: props.task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      children: format(new Date(props.task.date), 'dd-MM-Y')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      children: props.task.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      children: props.task.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      children: /*#__PURE__*/_jsxDEV(MyButton, {\n        onClick: () => setModal(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(TaskUpdate, {\n        update: props.update,\n        taskId: props.task.id,\n        modal: taskUpdated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      children: /*#__PURE__*/_jsxDEV(MyButton, {\n        onClick: () => props.remove(props.task.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, props.task.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 13\n  }, this);\n};\n_s(TaskItem, \"FxRBWQPa/dKnwvdbY5qed8chvVc=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","MyButton","TaskForm","MyModal","TaskUpdate","format","TaskItem","props","modal","setModal","taskUpdated","columns","field","headerName","width","editable","type","description","sortable","valueGetter","params","getValue","id","task","title","Date","date","status","body","update","remove"],"sources":["/Users/viktorbelakov/Documents/Develop/tasks/src/сomponents/TaskItem.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport MyButton from \"./UI/button/MyButton\";\nimport TaskForm from \"./TaskForm\";\nimport MyModal from \"./UI/MyModal/MyModal\";\nimport TaskUpdate from \"./TaskUpdate\";\nimport format from 'date-fns/format';\n\nconst TaskItem = (props) => {\n    const [modal, setModal] = useState(false);\n\n    const taskUpdated = () => {\n        setModal(false)\n    }\n\n    const columns = [\n        {\n            field: 'firstName',\n            headerName: 'First name',\n            width: 150,\n            editable: true,\n        },\n        {\n            field: 'lastName',\n            headerName: 'Last name',\n            width: 150,\n            editable: true,\n        },\n        {\n            field: 'age',\n            headerName: 'Age',\n            type: 'number',\n            width: 110,\n            editable: true,\n        },\n        {\n            field: 'fullName',\n            headerName: 'Full name',\n            description: 'This column has a value getter and is not sortable.',\n            sortable: false,\n            width: 160,\n            valueGetter: (params) =>\n                `${params.getValue(params.id, 'firstName') || ''} ${\n                    params.getValue(params.id, 'lastName') || ''\n                }`,\n        },\n    ];\n\n    return (\n            <tr key={props.task.id}>\n                <th>{props.task.title}</th>\n                <th>{format(new Date(props.task.date), 'dd-MM-Y')}</th>\n                <th>{props.task.status}</th>\n                <th>{props.task.body}</th>\n                <th><MyButton  onClick={() => setModal(true)}>Edit</MyButton></th>\n                <MyModal visible={modal} setVisible={setModal}>\n                    <TaskUpdate update={props.update} taskId={props.task.id} modal={taskUpdated} ></TaskUpdate>\n                </MyModal>\n                <th><MyButton  onClick={() => props.remove(props.task.id)}>Delete</MyButton></th>\n            </tr>\n    );\n};\n\nexport default TaskItem;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,MAAM,MAAM,iBAAiB;AAAC;AAErC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMU,WAAW,GAAG,MAAM;IACtBD,QAAQ,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAME,OAAO,GAAG,CACZ;IACIC,KAAK,EAAE,WAAW;IAClBC,UAAU,EAAE,YAAY;IACxBC,KAAK,EAAE,GAAG;IACVC,QAAQ,EAAE;EACd,CAAC,EACD;IACIH,KAAK,EAAE,UAAU;IACjBC,UAAU,EAAE,WAAW;IACvBC,KAAK,EAAE,GAAG;IACVC,QAAQ,EAAE;EACd,CAAC,EACD;IACIH,KAAK,EAAE,KAAK;IACZC,UAAU,EAAE,KAAK;IACjBG,IAAI,EAAE,QAAQ;IACdF,KAAK,EAAE,GAAG;IACVC,QAAQ,EAAE;EACd,CAAC,EACD;IACIH,KAAK,EAAE,UAAU;IACjBC,UAAU,EAAE,WAAW;IACvBI,WAAW,EAAE,qDAAqD;IAClEC,QAAQ,EAAE,KAAK;IACfJ,KAAK,EAAE,GAAG;IACVK,WAAW,EAAGC,MAAM,IACf,GAAEA,MAAM,CAACC,QAAQ,CAACD,MAAM,CAACE,EAAE,EAAE,WAAW,CAAC,IAAI,EAAG,IAC7CF,MAAM,CAACC,QAAQ,CAACD,MAAM,CAACE,EAAE,EAAE,UAAU,CAAC,IAAI,EAC7C;EACT,CAAC,CACJ;EAED,oBACQ;IAAA,wBACI;MAAA,UAAKf,KAAK,CAACgB,IAAI,CAACC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAC3B;MAAA,UAAKnB,MAAM,CAAC,IAAIoB,IAAI,CAAClB,KAAK,CAACgB,IAAI,CAACG,IAAI,CAAC,EAAE,SAAS;IAAC;MAAA;MAAA;MAAA;IAAA,QAAM,eACvD;MAAA,UAAKnB,KAAK,CAACgB,IAAI,CAACI;IAAM;MAAA;MAAA;MAAA;IAAA,QAAM,eAC5B;MAAA,UAAKpB,KAAK,CAACgB,IAAI,CAACK;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,eAC1B;MAAA,uBAAI,QAAC,QAAQ;QAAE,OAAO,EAAE,MAAMnB,QAAQ,CAAC,IAAI,CAAE;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK,eAClE,QAAC,OAAO;MAAC,OAAO,EAAED,KAAM;MAAC,UAAU,EAAEC,QAAS;MAAA,uBAC1C,QAAC,UAAU;QAAC,MAAM,EAAEF,KAAK,CAACsB,MAAO;QAAC,MAAM,EAAEtB,KAAK,CAACgB,IAAI,CAACD,EAAG;QAAC,KAAK,EAAEZ;MAAY;QAAA;QAAA;QAAA;MAAA;IAAe;MAAA;MAAA;MAAA;IAAA,QACrF,eACV;MAAA,uBAAI,QAAC,QAAQ;QAAE,OAAO,EAAE,MAAMH,KAAK,CAACuB,MAAM,CAACvB,KAAK,CAACgB,IAAI,CAACD,EAAE,CAAE;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA,GAT5Ef,KAAK,CAACgB,IAAI,CAACD,EAAE;IAAA;IAAA;IAAA;EAAA,QAUjB;AAEjB,CAAC;AAAC,GArDIhB,QAAQ;AAAA,KAARA,QAAQ;AAuDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}