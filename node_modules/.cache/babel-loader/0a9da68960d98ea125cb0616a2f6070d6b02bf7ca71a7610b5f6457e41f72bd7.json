{"ast":null,"code":"var _jsxFileName = \"/Users/viktorbelakov/Documents/Develop/tasks/src/App.js\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  var _s = $RefreshSig$();\n  const TaskList = () => {\n    _s();\n    const [tasks, setTasks] = useState([{\n      id: 1,\n      date: '2022-01-01',\n      status: 'completed',\n      title: 'Task 1',\n      body: 'Task Body 1'\n    }, {\n      id: 2,\n      date: '2022-02-01',\n      status: 'in progress',\n      title: 'Task 2',\n      body: 'Task Body 2'\n    }, {\n      id: 3,\n      date: '2022-03-01',\n      status: 'pending',\n      title: 'Task 3',\n      body: 'Task Body 3'\n    }]);\n    const [filter, setFilter] = useState({\n      date: '',\n      status: ''\n    });\n    const filterTasks = () => {\n      let filteredTasks = [...tasks];\n      if (filter.date) {\n        filteredTasks = filteredTasks.filter(task => task.date === filter.date);\n      }\n      if (filter.status) {\n        filteredTasks = filteredTasks.filter(task => task.status === filter.status);\n      }\n      setTasks(filteredTasks);\n    };\n    const sortTasks = sortType => {\n      let sortedTasks = [...tasks];\n      if (sortType === 'date') {\n        sortedTasks.sort((a, b) => new Date(a.date) - new Date(b.date));\n      } else if (sortType === 'status') {\n        sortedTasks.sort((a, b) => a.status.localeCompare(b.status));\n      } else if (sortType === 'description') {\n        sortedTasks.sort((a, b) => a.title.localeCompare(b.title));\n      }\n      setTasks(sortedTasks);\n    };\n    const handleEdit = (taskId, newTitle, newStatus) => {\n      const updatedTasks = tasks.map(task => {\n        if (task.id === taskId) {\n          return {\n            ...task,\n            title: newTitle,\n            status: newStatus\n          };\n        }\n        return task;\n      });\n      setTasks(updatedTasks);\n    };\n    const handleDelete = taskId => {\n      const dueDate = new Date(tasks.find(task => task.id === taskId).date);\n      const today = new Date();\n      if (dueDate < today.setDate(today.getDate() - 6)) {\n        const updatedTasks = tasks.filter(task => task.id !== taskId);\n        setTasks(updatedTasks);\n      } else {\n        // display error message or alert\n        alert(\"Task can't be deleted as it's due date is less than 6 days from today.\");\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Filter by Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          onChange: e => setFilter({\n            ...filter,\n            date: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Filter by Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setFilter({\n            ...filter,\n            status: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"completed\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"in progress\",\n            children: \"In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pending\",\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: filterTasks,\n          children: \"Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Sort by:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sortTasks('date'),\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sortTasks('status'),\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sortTasks('description'),\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEdit(task.id, 'new text', 'completed'),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  };\n  _s(TaskList, \"BrBFeyiafTTFH5LlWT5Tj27FgAg=\");\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","TaskList","tasks","setTasks","useState","id","date","status","title","body","filter","setFilter","filterTasks","filteredTasks","task","sortTasks","sortType","sortedTasks","sort","a","b","Date","localeCompare","handleEdit","taskId","newTitle","newStatus","updatedTasks","map","handleDelete","dueDate","find","today","setDate","getDate","alert","e","target","value"],"sources":["/Users/viktorbelakov/Documents/Develop/tasks/src/App.js"],"sourcesContent":["import './App.css';\n\nfunction App() {\n\n    const TaskList = () => {\n        const [tasks, setTasks] = useState([\n            { id: 1, date: '2022-01-01', status: 'completed', title: 'Task 1', body: 'Task Body 1' },\n            { id: 2, date: '2022-02-01', status: 'in progress', title: 'Task 2', body: 'Task Body 2' },\n            { id: 3, date: '2022-03-01', status: 'pending', title: 'Task 3', body: 'Task Body 3' },\n        ]);\n\n        const [filter, setFilter] = useState({ date: '', status: '' });\n\n        const filterTasks = () => {\n            let filteredTasks = [...tasks];\n            if (filter.date) {\n                filteredTasks = filteredTasks.filter((task) => task.date === filter.date);\n            }\n            if (filter.status) {\n                filteredTasks = filteredTasks.filter((task) => task.status === filter.status);\n            }\n            setTasks(filteredTasks);\n        };\n\n        const sortTasks = (sortType) => {\n            let sortedTasks = [...tasks];\n            if (sortType === 'date') {\n                sortedTasks.sort((a, b) => new Date(a.date) - new Date(b.date));\n            } else if (sortType === 'status') {\n                sortedTasks.sort((a, b) => a.status.localeCompare(b.status));\n            } else if (sortType === 'description') {\n                sortedTasks.sort((a, b) => a.title.localeCompare(b.title));\n            }\n            setTasks(sortedTasks);\n        };\n\n        const handleEdit = (taskId, newTitle, newStatus) => {\n            const updatedTasks = tasks.map((task) => {\n                if (task.id === taskId) {\n                    return { ...task, title: newTitle, status: newStatus };\n                }\n                return task;\n            });\n            setTasks(updatedTasks);\n        };\n\n        const handleDelete = (taskId) => {\n            const dueDate = new Date(tasks.find((task) => task.id === taskId).date);\n            const today = new Date();\n            if (dueDate < today.setDate(today.getDate() - 6)) {\n                const updatedTasks = tasks.filter((task) => task.id !== taskId);\n                setTasks(updatedTasks);\n            } else {\n// display error message or alert\n                alert(\"Task can't be deleted as it's due date is less than 6 days from today.\");\n            }\n        };\n\n        return (\n            <div>\n                <div>\n                    <label>Filter by Date:</label>\n                    <input type=\"date\" onChange={(e) => setFilter({ ...filter, date: e.target.value })} />\n                    <label>Filter by Status:</label>\n                    <select onChange={(e) => setFilter({ ...filter, status: e.target.value })}>\n                        <option value=\"\">All</option>\n                        <option value=\"completed\">Completed</option>\n                        <option value=\"in progress\">In Progress</option>\n                        <option value=\"pending\">Pending</option>\n                    </select>\n                    <button onClick={filterTasks}>Filter</button>\n                </div>\n                <div>\n                    <label>Sort by:</label>\n                    <button onClick={() => sortTasks('date')}>Date</button>\n                    <button onClick={() => sortTasks('status')}>Status</button>\n                    <button onClick={() => sortTasks('description')}>Description</button>\n                </div>\n                <ul>\n                    {tasks.map((task) => (\n                        <li key={task.id}>\n                            <p>{task.title}</p>\n                            <p>{task.date}</p>\n                            <p>{task.status}</p>\n                            <p>{task.body}</p>\n                            <button onClick={() => handleEdit(task.id, 'new text', 'completed')}>Edit</button>\n                            <button onClick={() => handleDelete(task.id)}>Delete</button>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        );\n    };\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}