{"ast":null,"code":"var _jsxFileName = \"/Users/viktorbelakov/Documents/Develop/tasks/src/\\u0441omponents/TaskForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport input from \"./UI/input/MyInput\";\nimport MyButton from \"./UI/button/MyButton\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = _ref => {\n  _s();\n  let {\n    create\n  } = _ref;\n  const [task, setTask] = useState({\n    title: '',\n    body: '',\n    status: ''\n  });\n  const addNewTask = e => {\n    e.preventDefault();\n    const newTask = {\n      ...task\n    };\n    create(newTask);\n    setTask({\n      title: '',\n      body: '',\n      status: ''\n    });\n  };\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit\n  } = useForm();\n  const onSubmit = data => {\n    alert(JSON.stringify(data));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Task name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"title\", {\n          required: \"this field is required\"\n        }),\n        value: task.title,\n        onChange: e => setTask({\n          ...task,\n          title: e.target.value\n        }),\n        type: \"text\",\n        placeholder: \"Task name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Task description\", /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"body\", {\n          required: \"this field is required\"\n        }),\n        value: task.body,\n        onChange: e => setTask({\n          ...task,\n          body: e.target.value\n        }),\n        type: \"text\",\n        placeholder: \"Task description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Task status\", /*#__PURE__*/_jsxDEV(\"select\", {\n        ...register(\"status\", {\n          required: \"this field is required\"\n        }),\n        onChange: e => setTask({\n          ...task,\n          status: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pending\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"in progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Task deadline\", /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"date\", {\n          required: \"this field is required\"\n        }),\n        type: \"date\",\n        onChange: e => setTask({\n          ...task,\n          date: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: addNewTask,\n      children: \"Create task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Create task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"BqLrQqgx/7Uu5zbKi9UB1YoMKLM=\", false, function () {\n  return [useForm];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","input","MyButton","useForm","TaskForm","create","task","setTask","title","body","status","addNewTask","e","preventDefault","newTask","register","formState","errors","handleSubmit","onSubmit","data","alert","JSON","stringify","required","target","value","date"],"sources":["/Users/viktorbelakov/Documents/Develop/tasks/src/сomponents/TaskForm.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport input from \"./UI/input/MyInput\";\nimport MyButton from \"./UI/button/MyButton\";\nimport {useForm} from \"react-hook-form\";\n\nconst TaskForm = ({create}) => {\n\n    const [task, setTask] = useState({title: '', body: '', status: ''});\n\n    const addNewTask = (e) => {\n        e.preventDefault()\n        const newTask = {\n            ...task\n        }\n        create(newTask)\n        setTask({title: '', body: '', status: ''})\n\n    }\n\n    const {\n        register, formState: {\n            errors,\n        }, handleSubmit\n    } = useForm();\n\n    const onSubmit = (data) => {\n        alert(JSON.stringify(data))\n    }\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <label>Task name\n                <input\n                    {...register(\"title\", {required: \"this field is required\"})}\n                    value={task.title}\n                    onChange={e => setTask({...task, title: e.target.value})}\n                    type=\"text\"\n                    placeholder=\"Task name\"\n\n                ></input>\n            </label>\n\n            <label>Task description\n                <input\n                    {...register(\"body\", {required: \"this field is required\"})}\n                    value={task.body}\n                    onChange={e => setTask({...task, body: e.target.value})}\n                    type=\"text\"\n                    placeholder=\"Task description\"\n\n                ></input>\n            </label>\n\n            <label>Task status\n                <select\n                    {...register(\"status\", {required: \"this field is required\"})}\n                    onChange={(e) => setTask({...task, status: e.target.value})\n                }>\n                    <option value=\"pending\">Pending</option>\n                    <option value=\"completed\">Completed</option>\n                    <option value=\"in progress\">In Progress</option>\n                </select>\n            </label><br/>\n\n            <label>Task deadline\n                <input\n                    {...register(\"date\", {required: \"this field is required\"})}\n                    type=\"date\"\n                    onChange={(e) => setTask({...task, date: e.target.value})}\n                />\n            </label>\n\n            <MyButton onClick={addNewTask}>Create task</MyButton>\n            <input type=\"submit\" value=\"Create task\"/>\n\n        </form>\n    );\n};\n\nexport default TaskForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}