{"ast":null,"code":"var _jsxFileName = \"/Users/viktorbelakov/Documents/Develop/tasks/src/\\u0441omponents/TaskItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MyButton from \"./UI/button/MyButton\";\nimport TaskForm from \"./TaskForm\";\nimport MyModal from \"./UI/MyModal/MyModal\";\nimport TaskUpdate from \"./TaskUpdate\";\nimport format from 'date-fns/format';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = props => {\n  _s();\n  const [modal, setModal] = useState(false);\n  const taskUpdated = () => {\n    setModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(TableBody, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: props.task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: format(new Date(props.task.date), 'dd-MM-Y')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: props.task.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: props.task.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(MyButton, {\n          onClick: () => setModal(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n        visible: modal,\n        setVisible: setModal,\n        children: /*#__PURE__*/_jsxDEV(TaskUpdate, {\n          update: props.update,\n          taskId: props.task.id,\n          modal: taskUpdated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(MyButton, {\n          onClick: () => props.remove(props.task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, props.task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskItem, \"FxRBWQPa/dKnwvdbY5qed8chvVc=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","MyButton","TaskForm","MyModal","TaskUpdate","format","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TaskItem","props","modal","setModal","taskUpdated","task","title","Date","date","status","body","update","id","remove"],"sources":["/Users/viktorbelakov/Documents/Develop/tasks/src/сomponents/TaskItem.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport MyButton from \"./UI/button/MyButton\";\nimport TaskForm from \"./TaskForm\";\nimport MyModal from \"./UI/MyModal/MyModal\";\nimport TaskUpdate from \"./TaskUpdate\";\nimport format from 'date-fns/format';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nconst TaskItem = (props) => {\n    const [modal, setModal] = useState(false);\n\n    const taskUpdated = () => {\n        setModal(false)\n    }\n\n    return (\n        <TableBody>\n            <TableRow key={props.task.id}>\n                <TableCell>{props.task.title}</TableCell>\n                <TableCell>{format(new Date(props.task.date), 'dd-MM-Y')}</TableCell>\n                <TableCell>{props.task.status}</TableCell>\n                <TableCell>{props.task.body}</TableCell>\n                <TableCell><MyButton  onClick={() => setModal(true)}>Edit</MyButton></TableCell>\n                <MyModal visible={modal} setVisible={setModal}>\n                    <TaskUpdate update={props.update} taskId={props.task.id} modal={taskUpdated} ></TaskUpdate>\n                </MyModal>\n                <TableCell><MyButton  onClick={() => props.remove(props.task.id)}>Delete</MyButton></TableCell>\n            </TableRow>\n        </TableBody>\n    );\n};\n\nexport default TaskItem;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,qBAAqB;AAAC;AAExC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMiB,WAAW,GAAG,MAAM;IACtBD,QAAQ,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACI,QAAC,SAAS;IAAA,uBACN,QAAC,QAAQ;MAAA,wBACL,QAAC,SAAS;QAAA,UAAEF,KAAK,CAACI,IAAI,CAACC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAa,eACzC,QAAC,SAAS;QAAA,UAAEd,MAAM,CAAC,IAAIe,IAAI,CAACN,KAAK,CAACI,IAAI,CAACG,IAAI,CAAC,EAAE,SAAS;MAAC;QAAA;QAAA;QAAA;MAAA,QAAa,eACrE,QAAC,SAAS;QAAA,UAAEP,KAAK,CAACI,IAAI,CAACI;MAAM;QAAA;QAAA;QAAA;MAAA,QAAa,eAC1C,QAAC,SAAS;QAAA,UAAER,KAAK,CAACI,IAAI,CAACK;MAAI;QAAA;QAAA;QAAA;MAAA,QAAa,eACxC,QAAC,SAAS;QAAA,uBAAC,QAAC,QAAQ;UAAE,OAAO,EAAE,MAAMP,QAAQ,CAAC,IAAI,CAAE;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA;MAAW;QAAA;QAAA;QAAA;MAAA,QAAY,eAChF,QAAC,OAAO;QAAC,OAAO,EAAED,KAAM;QAAC,UAAU,EAAEC,QAAS;QAAA,uBAC1C,QAAC,UAAU;UAAC,MAAM,EAAEF,KAAK,CAACU,MAAO;UAAC,MAAM,EAAEV,KAAK,CAACI,IAAI,CAACO,EAAG;UAAC,KAAK,EAAER;QAAY;UAAA;UAAA;UAAA;QAAA;MAAe;QAAA;QAAA;QAAA;MAAA,QACrF,eACV,QAAC,SAAS;QAAA,uBAAC,QAAC,QAAQ;UAAE,OAAO,EAAE,MAAMH,KAAK,CAACY,MAAM,CAACZ,KAAK,CAACI,IAAI,CAACO,EAAE,CAAE;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA;MAAW;QAAA;QAAA;QAAA;MAAA,QAAY;IAAA,GATpFX,KAAK,CAACI,IAAI,CAACO,EAAE;MAAA;MAAA;MAAA;IAAA;EAUjB;IAAA;IAAA;IAAA;EAAA,QACH;AAEpB,CAAC;AAAC,GAtBIZ,QAAQ;AAAA,KAARA,QAAQ;AAwBd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}