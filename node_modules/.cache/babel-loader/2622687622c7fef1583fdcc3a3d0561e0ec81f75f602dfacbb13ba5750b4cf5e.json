{"ast":null,"code":"var _jsxFileName = \"/Users/viktorbelakov/Documents/Develop/tasks/src/App.js\",\n  _s = $RefreshSig$();\nimport { useMemo, useState } from \"react\";\nimport TasksList from \"./сomponents/TasksList\";\nimport './styles/App.css';\nimport MyInput from \"./сomponents/UI/input/MyInput\";\nimport MyButton from \"./сomponents/UI/button/MyButton\";\nimport TaskForm from \"./сomponents/TaskForm\";\nimport MySelect from \"./сomponents/UI/select/MySelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    date: '2023-01-01',\n    status: 'completed',\n    title: 'Task 1',\n    body: 'Task Body 1'\n  }, {\n    id: 2,\n    date: '2023-02-02',\n    status: 'in progress',\n    title: 'Task 2',\n    body: 'Task Body 2'\n  }, {\n    id: 3,\n    date: '2023-03-03',\n    status: 'pending',\n    title: 'Task 3',\n    body: 'Task Body 3'\n  }, {\n    id: 4,\n    date: '2023-04-04',\n    status: 'completed',\n    title: 'TEST',\n    body: 'Task Body 4'\n  }]);\n  const [selectedSort, setSelectedSort] = useState('');\n  const [filter, setFilter] = useState({\n    date: '',\n    status: ''\n  });\n  const sortedTasks = useMemo(() => {\n    if (selectedSort) {\n      if (selectedSort !== 'date') {\n        return [...tasks].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]));\n      } else {\n        return [...tasks].sort((a, b) => new Date(a[selectedSort]) - new Date(b[selectedSort]));\n      }\n    } else {\n      return tasks;\n    }\n  }, [selectedSort, tasks]);\n  const sortTasks = sort => {\n    setSelectedSort(sort);\n  };\n  const createTask = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n  const handleDelete = taskId => {\n    const dueDate = new Date(tasks.find(task => task.id === taskId).date);\n    const today = new Date();\n    if (dueDate < today.setDate(today.getDate() - 6)) {\n      const updatedTasks = tasks.filter(task => task.id !== taskId);\n      setTasks(updatedTasks);\n    } else {\n      alert(\"Task can't be deleted as it's due date is less than 6 days from today.\");\n    }\n  };\n  const filterTasks = () => {\n    let filteredTasks = [...tasks];\n    if (filter.date) {\n      filteredTasks = filteredTasks.filter(task => task.date <= filter.date);\n    }\n    if (filter.status) {\n      filteredTasks = filteredTasks.filter(task => task.status === filter.status);\n    }\n    setTasks(filteredTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      create: createTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n      value: selectedSort,\n      onChange: sortTasks,\n      defaultValue: \"Sort\",\n      options: [{\n        value: 'body',\n        name: \"by body\"\n      }, {\n        value: 'date',\n        name: \"by date\"\n      }, {\n        value: 'status',\n        name: \"by status\"\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Filter by Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        onChange: e => setFilter({\n          ...filter,\n          date: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Filter by Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setFilter({\n          ...filter,\n          status: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"in progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pending\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: filterTasks,\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), tasks.length !== 0 ? /*#__PURE__*/_jsxDEV(TasksList, {\n      remove: handleDelete,\n      tasks: sortedTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"No tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"QdwMumXMJ0mn4VXn4yTifsU54TA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useMemo","useState","TasksList","MyInput","MyButton","TaskForm","MySelect","App","tasks","setTasks","id","date","status","title","body","selectedSort","setSelectedSort","filter","setFilter","sortedTasks","sort","a","b","localeCompare","Date","sortTasks","createTask","newTask","handleDelete","taskId","dueDate","find","task","today","setDate","getDate","updatedTasks","alert","filterTasks","filteredTasks","value","name","e","target","length","textAlign"],"sources":["/Users/viktorbelakov/Documents/Develop/tasks/src/App.js"],"sourcesContent":["import {useMemo, useState} from \"react\";\nimport TasksList from \"./сomponents/TasksList\";\nimport './styles/App.css'\nimport MyInput from \"./сomponents/UI/input/MyInput\";\nimport MyButton from \"./сomponents/UI/button/MyButton\";\nimport TaskForm from \"./сomponents/TaskForm\";\nimport MySelect from \"./сomponents/UI/select/MySelect\";\n\nfunction App() {\n\n    const [tasks, setTasks] = useState([\n        {id: 1, date: '2023-01-01', status: 'completed', title: 'Task 1', body: 'Task Body 1'},\n        {id: 2, date: '2023-02-02', status: 'in progress', title: 'Task 2', body: 'Task Body 2'},\n        {id: 3, date: '2023-03-03', status: 'pending', title: 'Task 3', body: 'Task Body 3'},\n        {id: 4, date: '2023-04-04', status: 'completed', title: 'TEST', body: 'Task Body 4'},\n    ]);\n\n    const [selectedSort, setSelectedSort] = useState('');\n\n    const [filter, setFilter] = useState({ date: '', status: '' });\n\n    const sortedTasks = useMemo(()=> {\n        if (selectedSort) {\n            if(selectedSort !== 'date'){\n                return [...tasks].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]))\n            }else{\n                return [...tasks].sort((a, b) => new Date(a[selectedSort]) - new Date(b[selectedSort]))\n            }\n        } else {\n            return tasks;\n        }\n    }, [selectedSort, tasks])\n\n    const sortTasks = (sort) => {\n        setSelectedSort(sort)\n    }\n\n    const createTask = (newTask) => {\n        setTasks([...tasks, newTask])\n    }\n\n    const handleDelete = (taskId) => {\n        const dueDate = new Date(tasks.find((task) => task.id === taskId).date);\n        const today = new Date();\n        if (dueDate < today.setDate(today.getDate() - 6)) {\n            const updatedTasks = tasks.filter((task) => task.id !== taskId);\n            setTasks(updatedTasks);\n        } else {\n            alert(\"Task can't be deleted as it's due date is less than 6 days from today.\");\n        }\n    };\n\n    const filterTasks = () => {\n        let filteredTasks = [...tasks];\n        if (filter.date) {\n            filteredTasks = filteredTasks.filter((task) => task.date <= filter.date);\n        }\n        if (filter.status) {\n            filteredTasks = filteredTasks.filter((task) => task.status === filter.status);\n        }\n        setTasks(filteredTasks);\n    };\n\n\n    return (\n        <div>\n            <TaskForm create={createTask}></TaskForm>\n            <MySelect\n                value={selectedSort}\n                onChange={sortTasks}\n                defaultValue=\"Sort\"\n                options={[\n                    {value: 'body', name: \"by body\"},\n                    {value: 'date', name: \"by date\"},\n                    {value: 'status', name: \"by status\"}\n                ]}\n            ></MySelect>\n\n            <div>\n                <label>Filter by Date:</label>\n                <input type=\"date\" onChange={(e) => setFilter({ ...filter, date: e.target.value })} />\n                <label>Filter by Status:</label>\n                <select onChange={(e) => setFilter({ ...filter, status: e.target.value })}>\n                    <option value=\"\">All</option>\n                    <option value=\"completed\">Completed</option>\n                    <option value=\"in progress\">In Progress</option>\n                    <option value=\"pending\">Pending</option>\n                </select>\n                <button onClick={filterTasks}>Filter</button>\n            </div>\n\n            {tasks.length !== 0\n                ? <TasksList remove={handleDelete} tasks={sortedTasks}/>\n                : <h1 style={{textAlign: \"center\"}}>No tasks</h1>\n            }\n\n        </div>\n    );\n\n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}