{"ast":null,"code":"var _jsxFileName = \"/Users/viktorbelakov/Documents/Develop/tasks/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from \"react\";\nimport TasksList from \"./сomponents/TasksList\";\nimport './styles/App.css';\nimport MyInput from \"./сomponents/UI/input/MyInput\";\nimport MyButton from \"./сomponents/UI/button/MyButton\";\nimport TaskForm from \"./сomponents/TaskForm\";\nimport MySelect from \"./сomponents/UI/select/MySelect\";\nimport TaskFilter from \"./сomponents/TaskFilter\";\nimport MyModal from \"./сomponents/UI/MyModal/MyModal\";\nimport { useTasks } from \"./hooks/useTasks\";\nimport axios from \"axios\";\nimport TaskService from \"./API/TaskService\";\nimport Loader from \"./сomponents/UI/loader/Loader\";\nimport { useFatching } from \"./hooks/useFatching\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState({\n    date: '',\n    status: '',\n    sort: ''\n  });\n  const [modal, setModal] = useState(false);\n  const filteredSortTasks = useTasks(tasks, filter.sort, filter);\n  const [fetchTasks, isTasksLoading, taskError] = useFatching(async () => {\n    const tasks = await TaskService.getAll();\n    setTasks(tasks);\n  });\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const createTask = async newTask => {\n    await TaskService.create(newTask);\n    setTasks([...tasks, newTask]);\n    setModal(false);\n  };\n  const handleDelete = async taskId => {\n    const dueDate = new Date(tasks.find(task => task.id === taskId).date);\n    const today = new Date();\n    alert(today.setDate(today.getDate() + 6));\n    if (dueDate > today.setDate(today.getDate() + 6) || dueDate < today) {\n      const updatedTasks = tasks.filter(task => task.id !== taskId);\n      //await TaskService.delete(taskId);\n      setTasks(updatedTasks);\n    } else {\n      alert(\"Task can't be deleted as it's due date is less than 6 days from today.\");\n    }\n  };\n  const handleEdit = async (taskId, newBody, newStatus) => {\n    await TaskService.update(taskId, newBody, newStatus);\n    const updatedTasks = tasks.map(task => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          body: newBody,\n          status: newStatus\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyButton, {\n      style: {\n        marginTop: \"30px\"\n      },\n      onClick: () => setModal(true),\n      children: \"Add task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(TaskForm, {\n        create: createTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), taskError && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Error: $\", taskError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), isTasksLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: \"60px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 92\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(TasksList, {\n      remove: handleDelete,\n      update: handleEdit,\n      tasks: filteredSortTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"VppZ3jlJezEVcNIRjWBmAmOmSEA=\", false, function () {\n  return [useTasks, useFatching];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useMemo","useState","TasksList","MyInput","MyButton","TaskForm","MySelect","TaskFilter","MyModal","useTasks","axios","TaskService","Loader","useFatching","App","tasks","setTasks","filter","setFilter","date","status","sort","modal","setModal","filteredSortTasks","fetchTasks","isTasksLoading","taskError","getAll","createTask","newTask","create","handleDelete","taskId","dueDate","Date","find","task","id","today","alert","setDate","getDate","updatedTasks","handleEdit","newBody","newStatus","update","map","body","marginTop","display","justifyContent"],"sources":["/Users/viktorbelakov/Documents/Develop/tasks/src/App.js"],"sourcesContent":["import {useEffect, useMemo, useState} from \"react\";\nimport TasksList from \"./сomponents/TasksList\";\nimport './styles/App.css'\nimport MyInput from \"./сomponents/UI/input/MyInput\";\nimport MyButton from \"./сomponents/UI/button/MyButton\";\nimport TaskForm from \"./сomponents/TaskForm\";\nimport MySelect from \"./сomponents/UI/select/MySelect\";\nimport TaskFilter from \"./сomponents/TaskFilter\";\nimport MyModal from \"./сomponents/UI/MyModal/MyModal\";\nimport {useTasks} from \"./hooks/useTasks\";\nimport axios from \"axios\";\nimport TaskService from \"./API/TaskService\";\nimport Loader from \"./сomponents/UI/loader/Loader\";\nimport {useFatching} from \"./hooks/useFatching\";\n\nfunction App() {\n\n    const [tasks, setTasks] = useState([]);\n    const [filter, setFilter] = useState({ date: '', status: '', sort: '' });\n    const [modal, setModal] = useState(false);\n    const filteredSortTasks = useTasks(tasks, filter.sort, filter);\n    const [fetchTasks, isTasksLoading, taskError] = useFatching(async () => {\n        const tasks = await TaskService.getAll();\n        setTasks(tasks)\n    });\n\n\n    useEffect(()=>{\n        fetchTasks()\n    },[])\n\n    const createTask = async (newTask) => {\n        await TaskService.create(newTask);\n        setTasks([...tasks, newTask])\n        setModal(false)\n    }\n\n    const handleDelete = async (taskId) => {\n        const dueDate = new Date(tasks.find((task) => task.id === taskId).date);\n        const today = new Date(); alert(today.setDate(today.getDate() + 6));\n        if (dueDate > today.setDate(today.getDate() + 6) || dueDate < today) {\n            const updatedTasks = tasks.filter((task) => task.id !== taskId);\n            //await TaskService.delete(taskId);\n            setTasks(updatedTasks);\n        } else {\n            alert(\"Task can't be deleted as it's due date is less than 6 days from today.\");\n        }\n    };\n\n    const handleEdit = async (taskId, newBody, newStatus) => {\n        await TaskService.update(taskId, newBody, newStatus);\n        const updatedTasks = tasks.map((task) => {\n            if (task.id === taskId) {\n                return { ...task, body: newBody, status: newStatus };\n            }\n            return task;\n        });\n        setTasks(updatedTasks);\n    };\n\n    return (\n        <div className=\"App\">\n            <MyButton style={{marginTop: \"30px\"}} onClick={()=>setModal(true)}>\n                Add task\n            </MyButton>\n\n            <MyModal visible={modal} setVisible={setModal}\n            >\n                <TaskForm create={createTask}></TaskForm>\n            </MyModal>\n\n            <TaskFilter\n                filter={filter}\n                setFilter={setFilter}\n            ></TaskFilter>\n\n            {taskError &&\n                <h3>Error: ${taskError}</h3>\n            }\n            {isTasksLoading\n                ? <div style={{display:\"flex\", justifyContent:\"center\", marginTop:\"60px\"}}><Loader/></div>\n                : <TasksList remove={handleDelete} update={handleEdit} tasks={filteredSortTasks}/>\n            }\n        </div>\n    );\n\n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}