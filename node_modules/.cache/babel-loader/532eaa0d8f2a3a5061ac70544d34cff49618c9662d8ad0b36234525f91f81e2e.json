{"ast":null,"code":"var _jsxFileName = \"/Users/viktorbelakov/Documents/Develop/tasks/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    date: '2022-01-01',\n    status: 'completed',\n    title: 'Task 1',\n    body: 'Task Body 1'\n  }, {\n    id: 2,\n    date: '2022-02-01',\n    status: 'in progress',\n    title: 'Task 2',\n    body: 'Task Body 2'\n  }, {\n    id: 3,\n    date: '2022-03-01',\n    status: 'pending',\n    title: 'Task 3',\n    body: 'Task Body 3'\n  }]);\n  const [filter, setFilter] = useState({\n    date: '',\n    status: ''\n  });\n  const filterTasks = () => {\n    let filteredTasks = [...tasks];\n    if (filter.date) {\n      filteredTasks = filteredTasks.filter(task => task.date === filter.date);\n    }\n    if (filter.status) {\n      filteredTasks = filteredTasks.filter(task => task.status === filter.status);\n    }\n    setTasks(filteredTasks);\n  };\n  const sortTasks = sortType => {\n    let sortedTasks = [...tasks];\n    if (sortType === 'date') {\n      sortedTasks.sort((a, b) => new Date(a.date) - new Date(b.date));\n    } else if (sortType === 'status') {\n      sortedTasks.sort((a, b) => a.status.localeCompare(b.status));\n    } else if (sortType === 'description') {\n      sortedTasks.sort((a, b) => a.title.localeCompare(b.title));\n    }\n    setTasks(sortedTasks);\n  };\n  const handleEdit = (taskId, newTitle, newStatus) => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          title: newTitle,\n          status: newStatus\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  const handleDelete = taskId => {\n    const dueDate = new Date(tasks.find(task => task.id === taskId).date);\n    const today = new Date();\n    if (dueDate < today.setDate(today.getDate() - 6)) {\n      const updatedTasks = tasks.filter(task => task.id !== taskId);\n      setTasks(updatedTasks);\n    } else {\n      // display error message or alert\n      alert(\"Task can't be deleted as it's due date is less than 6 days from today.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Filter by Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        onChange: e => setFilter({\n          ...filter,\n          date: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Filter by Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setFilter({\n          ...filter,\n          status: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"in progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pending\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: filterTasks,\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Sort by:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sortTasks('date'),\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sortTasks('status'),\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sortTasks('description'),\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(task.id, 'new text', 'completed'),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 13\n  }, this);\n}\n_s(App, \"BrBFeyiafTTFH5LlWT5Tj27FgAg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","tasks","setTasks","useState","id","date","status","title","body","filter","setFilter","filterTasks","filteredTasks","task","sortTasks","sortType","sortedTasks","sort","a","b","Date","localeCompare","handleEdit","taskId","newTitle","newStatus","updatedTasks","map","handleDelete","dueDate","find","today","setDate","getDate","alert","e","target","value"],"sources":["/Users/viktorbelakov/Documents/Develop/tasks/src/App.js"],"sourcesContent":["import './App.css';\n\nfunction App() {\n\n        const [tasks, setTasks] = useState([\n            { id: 1, date: '2022-01-01', status: 'completed', title: 'Task 1', body: 'Task Body 1' },\n            { id: 2, date: '2022-02-01', status: 'in progress', title: 'Task 2', body: 'Task Body 2' },\n            { id: 3, date: '2022-03-01', status: 'pending', title: 'Task 3', body: 'Task Body 3' },\n        ]);\n\n        const [filter, setFilter] = useState({ date: '', status: '' });\n\n        const filterTasks = () => {\n            let filteredTasks = [...tasks];\n            if (filter.date) {\n                filteredTasks = filteredTasks.filter((task) => task.date === filter.date);\n            }\n            if (filter.status) {\n                filteredTasks = filteredTasks.filter((task) => task.status === filter.status);\n            }\n            setTasks(filteredTasks);\n        };\n\n        const sortTasks = (sortType) => {\n            let sortedTasks = [...tasks];\n            if (sortType === 'date') {\n                sortedTasks.sort((a, b) => new Date(a.date) - new Date(b.date));\n            } else if (sortType === 'status') {\n                sortedTasks.sort((a, b) => a.status.localeCompare(b.status));\n            } else if (sortType === 'description') {\n                sortedTasks.sort((a, b) => a.title.localeCompare(b.title));\n            }\n            setTasks(sortedTasks);\n        };\n\n        const handleEdit = (taskId, newTitle, newStatus) => {\n            const updatedTasks = tasks.map((task) => {\n                if (task.id === taskId) {\n                    return { ...task, title: newTitle, status: newStatus };\n                }\n                return task;\n            });\n            setTasks(updatedTasks);\n        };\n\n        const handleDelete = (taskId) => {\n            const dueDate = new Date(tasks.find((task) => task.id === taskId).date);\n            const today = new Date();\n            if (dueDate < today.setDate(today.getDate() - 6)) {\n                const updatedTasks = tasks.filter((task) => task.id !== taskId);\n                setTasks(updatedTasks);\n            } else {\n// display error message or alert\n                alert(\"Task can't be deleted as it's due date is less than 6 days from today.\");\n            }\n        };\n\n        return (\n            <div>\n                <div>\n                    <label>Filter by Date:</label>\n                    <input type=\"date\" onChange={(e) => setFilter({ ...filter, date: e.target.value })} />\n                    <label>Filter by Status:</label>\n                    <select onChange={(e) => setFilter({ ...filter, status: e.target.value })}>\n                        <option value=\"\">All</option>\n                        <option value=\"completed\">Completed</option>\n                        <option value=\"in progress\">In Progress</option>\n                        <option value=\"pending\">Pending</option>\n                    </select>\n                    <button onClick={filterTasks}>Filter</button>\n                </div>\n                <div>\n                    <label>Sort by:</label>\n                    <button onClick={() => sortTasks('date')}>Date</button>\n                    <button onClick={() => sortTasks('status')}>Status</button>\n                    <button onClick={() => sortTasks('description')}>Description</button>\n                </div>\n                <ul>\n                    {tasks.map((task) => (\n                        <li key={task.id}>\n                            <p>{task.title}</p>\n                            <p>{task.date}</p>\n                            <p>{task.status}</p>\n                            <p>{task.body}</p>\n                            <button onClick={() => handleEdit(task.id, 'new text', 'completed')}>Edit</button>\n                            <button onClick={() => handleDelete(task.id)}>Delete</button>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        );\n\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAAC;AAEnB,SAASA,GAAG,GAAG;EAAA;EAEP,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,CAC/B;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE,WAAW;IAAEC,KAAK,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAc,CAAC,EACxF;IAAEJ,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE,aAAa;IAAEC,KAAK,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAc,CAAC,EAC1F;IAAEJ,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE,SAAS;IAAEC,KAAK,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAc,CAAC,CACzF,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC;IAAEE,IAAI,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,CAAC;EAE9D,MAAMK,WAAW,GAAG,MAAM;IACtB,IAAIC,aAAa,GAAG,CAAC,GAAGX,KAAK,CAAC;IAC9B,IAAIQ,MAAM,CAACJ,IAAI,EAAE;MACbO,aAAa,GAAGA,aAAa,CAACH,MAAM,CAAEI,IAAI,IAAKA,IAAI,CAACR,IAAI,KAAKI,MAAM,CAACJ,IAAI,CAAC;IAC7E;IACA,IAAII,MAAM,CAACH,MAAM,EAAE;MACfM,aAAa,GAAGA,aAAa,CAACH,MAAM,CAAEI,IAAI,IAAKA,IAAI,CAACP,MAAM,KAAKG,MAAM,CAACH,MAAM,CAAC;IACjF;IACAJ,QAAQ,CAACU,aAAa,CAAC;EAC3B,CAAC;EAED,MAAME,SAAS,GAAIC,QAAQ,IAAK;IAC5B,IAAIC,WAAW,GAAG,CAAC,GAAGf,KAAK,CAAC;IAC5B,IAAIc,QAAQ,KAAK,MAAM,EAAE;MACrBC,WAAW,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACb,IAAI,CAAC,GAAG,IAAIe,IAAI,CAACD,CAAC,CAACd,IAAI,CAAC,CAAC;IACnE,CAAC,MAAM,IAAIU,QAAQ,KAAK,QAAQ,EAAE;MAC9BC,WAAW,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACZ,MAAM,CAACe,aAAa,CAACF,CAAC,CAACb,MAAM,CAAC,CAAC;IAChE,CAAC,MAAM,IAAIS,QAAQ,KAAK,aAAa,EAAE;MACnCC,WAAW,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACX,KAAK,CAACc,aAAa,CAACF,CAAC,CAACZ,KAAK,CAAC,CAAC;IAC9D;IACAL,QAAQ,CAACc,WAAW,CAAC;EACzB,CAAC;EAED,MAAMM,UAAU,GAAG,CAACC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,KAAK;IAChD,MAAMC,YAAY,GAAGzB,KAAK,CAAC0B,GAAG,CAAEd,IAAI,IAAK;MACrC,IAAIA,IAAI,CAACT,EAAE,KAAKmB,MAAM,EAAE;QACpB,OAAO;UAAE,GAAGV,IAAI;UAAEN,KAAK,EAAEiB,QAAQ;UAAElB,MAAM,EAAEmB;QAAU,CAAC;MAC1D;MACA,OAAOZ,IAAI;IACf,CAAC,CAAC;IACFX,QAAQ,CAACwB,YAAY,CAAC;EAC1B,CAAC;EAED,MAAME,YAAY,GAAIL,MAAM,IAAK;IAC7B,MAAMM,OAAO,GAAG,IAAIT,IAAI,CAACnB,KAAK,CAAC6B,IAAI,CAAEjB,IAAI,IAAKA,IAAI,CAACT,EAAE,KAAKmB,MAAM,CAAC,CAAClB,IAAI,CAAC;IACvE,MAAM0B,KAAK,GAAG,IAAIX,IAAI,EAAE;IACxB,IAAIS,OAAO,GAAGE,KAAK,CAACC,OAAO,CAACD,KAAK,CAACE,OAAO,EAAE,GAAG,CAAC,CAAC,EAAE;MAC9C,MAAMP,YAAY,GAAGzB,KAAK,CAACQ,MAAM,CAAEI,IAAI,IAAKA,IAAI,CAACT,EAAE,KAAKmB,MAAM,CAAC;MAC/DrB,QAAQ,CAACwB,YAAY,CAAC;IAC1B,CAAC,MAAM;MACnB;MACgBQ,KAAK,CAAC,wEAAwE,CAAC;IACnF;EACJ,CAAC;EAED,oBACI;IAAA,wBACI;MAAA,wBACI;QAAA,UAAO;MAAe;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC9B;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAGC,CAAC,IAAKzB,SAAS,CAAC;UAAE,GAAGD,MAAM;UAAEJ,IAAI,EAAE8B,CAAC,CAACC,MAAM,CAACC;QAAM,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eACtF;QAAA,UAAO;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAQ,eAChC;QAAQ,QAAQ,EAAGF,CAAC,IAAKzB,SAAS,CAAC;UAAE,GAAGD,MAAM;UAAEH,MAAM,EAAE6B,CAAC,CAACC,MAAM,CAACC;QAAM,CAAC,CAAE;QAAA,wBACtE;UAAQ,KAAK,EAAC,EAAE;UAAA,UAAC;QAAG;UAAA;UAAA;UAAA;QAAA,QAAS,eAC7B;UAAQ,KAAK,EAAC,WAAW;UAAA,UAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAS,eAC5C;UAAQ,KAAK,EAAC,aAAa;UAAA,UAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAS,eAChD;UAAQ,KAAK,EAAC,SAAS;UAAA,UAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACnC,eACT;QAAQ,OAAO,EAAE1B,WAAY;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3C,eACN;MAAA,wBACI;QAAA,UAAO;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAQ,eACvB;QAAQ,OAAO,EAAE,MAAMG,SAAS,CAAC,MAAM,CAAE;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS,eACvD;QAAQ,OAAO,EAAE,MAAMA,SAAS,CAAC,QAAQ,CAAE;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS,eAC3D;QAAQ,OAAO,EAAE,MAAMA,SAAS,CAAC,aAAa,CAAE;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACnE,eACN;MAAA,UACKb,KAAK,CAAC0B,GAAG,CAAEd,IAAI,iBACZ;QAAA,wBACI;UAAA,UAAIA,IAAI,CAACN;QAAK;UAAA;UAAA;UAAA;QAAA,QAAK,eACnB;UAAA,UAAIM,IAAI,CAACR;QAAI;UAAA;UAAA;UAAA;QAAA,QAAK,eAClB;UAAA,UAAIQ,IAAI,CAACP;QAAM;UAAA;UAAA;UAAA;QAAA,QAAK,eACpB;UAAA,UAAIO,IAAI,CAACL;QAAI;UAAA;UAAA;UAAA;QAAA,QAAK,eAClB;UAAQ,OAAO,EAAE,MAAMc,UAAU,CAACT,IAAI,CAACT,EAAE,EAAE,UAAU,EAAE,WAAW,CAAE;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS,eAClF;UAAQ,OAAO,EAAE,MAAMwB,YAAY,CAACf,IAAI,CAACT,EAAE,CAAE;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA,GANxDS,IAAI,CAACT,EAAE;QAAA;QAAA;QAAA;MAAA,QAQnB;IAAC;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAGlB;AAAC,GA1FQJ,GAAG;AAAA,KAAHA,GAAG;AA4FZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}