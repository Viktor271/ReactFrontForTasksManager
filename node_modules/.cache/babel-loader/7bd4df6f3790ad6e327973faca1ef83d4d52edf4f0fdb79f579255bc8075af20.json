{"ast":null,"code":"var _jsxFileName = \"/Users/viktorbelakov/Documents/Develop/tasks/src/\\u0441omponents/TaskForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MyInput from \"./UI/input/MyInput\";\nimport MyButton from \"./UI/button/MyButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = _ref => {\n  _s();\n  let {\n    create\n  } = _ref;\n  const [task, setTask] = useState({\n    title: '',\n    body: '',\n    status: ''\n  });\n  const addNewTask = e => {\n    e.preventDefault();\n    const newTask = {\n      ...task\n    };\n    create(newTask);\n    setTask({\n      title: '',\n      body: '',\n      status: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Task name\", /*#__PURE__*/_jsxDEV(MyInput, {\n        value: task.title,\n        onChange: e => setTask({\n          ...task,\n          title: e.target.value\n        }),\n        type: \"text\",\n        placeholder: \"Task name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Task description\", /*#__PURE__*/_jsxDEV(MyInput, {\n        value: task.body,\n        onChange: e => setTask({\n          ...task,\n          body: e.target.value\n        }),\n        type: \"text\",\n        placeholder: \"Task description\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Task status \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setTask({\n          ...task,\n          status: e.target.value\n        }),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pending\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"in progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Task deadline\", /*#__PURE__*/_jsxDEV(MyInput, {\n        type: \"date\",\n        onChange: e => setTask({\n          ...task,\n          date: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: addNewTask,\n      children: \"Create task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"TaAVq0egyKGh0N5CA9skr/lVADs=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","MyInput","MyButton","TaskForm","create","task","setTask","title","body","status","addNewTask","e","preventDefault","newTask","target","value","date"],"sources":["/Users/viktorbelakov/Documents/Develop/tasks/src/сomponents/TaskForm.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport MyInput from \"./UI/input/MyInput\";\nimport MyButton from \"./UI/button/MyButton\";\n\nconst TaskForm = ({create}) => {\n\n    const [task, setTask] = useState({title: '', body: '', status: ''});\n\n    const addNewTask = (e) => {\n        e.preventDefault()\n        const newTask = {\n            ...task\n        }\n        create(newTask)\n        setTask({title: '', body: '', status: ''})\n\n    }\n\n    return (\n        <form>\n            <label>Task name\n                <MyInput\n                    value={task.title}\n                    onChange={e => setTask({...task, title: e.target.value})}\n                    type=\"text\"\n                    placeholder=\"Task name\"\n                    required = {true}\n                ></MyInput>\n            </label>\n            <label>Task description\n                <MyInput\n                    value={task.body}\n                    onChange={e => setTask({...task, body: e.target.value})}\n                    type=\"text\"\n                    placeholder=\"Task description\"\n                    required = {true}\n                ></MyInput>\n            </label>\n            <label>Task status <br/>\n                <select onChange={(e) => setTask({...task, status: e.target.value})} required = {true}>\n                    <option value=\"pending\">Pending</option>\n                    <option value=\"completed\">Completed</option>\n                    <option value=\"in progress\">In Progress</option>\n                </select>\n            </label>\n            <label>Task deadline\n                <MyInput type=\"date\" onChange={(e) => setTask({...task, date: e.target.value})} required = {true}/>\n            </label>\n            <MyButton onClick={addNewTask}>Create task</MyButton>\n\n        </form>\n    );\n};\n\nexport default TaskForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,QAAQ,MAAM,sBAAsB;AAAC;AAE5C,MAAMC,QAAQ,GAAG,QAAc;EAAA;EAAA,IAAb;IAACC;EAAM,CAAC;EAEtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC;IAACO,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAE,CAAC,CAAC;EAEnE,MAAMC,UAAU,GAAIC,CAAC,IAAK;IACtBA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,OAAO,GAAG;MACZ,GAAGR;IACP,CAAC;IACDD,MAAM,CAACS,OAAO,CAAC;IACfP,OAAO,CAAC;MAACC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAE,CAAC,CAAC;EAE9C,CAAC;EAED,oBACI;IAAA,wBACI;MAAA,WAAO,WACH,uBAAC,OAAO;QACJ,KAAK,EAAEJ,IAAI,CAACE,KAAM;QAClB,QAAQ,EAAEI,CAAC,IAAIL,OAAO,CAAC;UAAC,GAAGD,IAAI;UAAEE,KAAK,EAAEI,CAAC,CAACG,MAAM,CAACC;QAAK,CAAC,CAAE;QACzD,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,WAAW;QACvB,QAAQ,EAAI;MAAK;QAAA;QAAA;QAAA;MAAA,QACV;IAAA;MAAA;MAAA;MAAA;IAAA,QACP,eACR;MAAA,WAAO,kBACH,uBAAC,OAAO;QACJ,KAAK,EAAEV,IAAI,CAACG,IAAK;QACjB,QAAQ,EAAEG,CAAC,IAAIL,OAAO,CAAC;UAAC,GAAGD,IAAI;UAAEG,IAAI,EAAEG,CAAC,CAACG,MAAM,CAACC;QAAK,CAAC,CAAE;QACxD,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,kBAAkB;QAC9B,QAAQ,EAAI;MAAK;QAAA;QAAA;QAAA;MAAA,QACV;IAAA;MAAA;MAAA;MAAA;IAAA,QACP,eACR;MAAA,WAAO,cAAY;QAAA;QAAA;QAAA;MAAA,QAAK,eACpB;QAAQ,QAAQ,EAAGJ,CAAC,IAAKL,OAAO,CAAC;UAAC,GAAGD,IAAI;UAAEI,MAAM,EAAEE,CAAC,CAACG,MAAM,CAACC;QAAK,CAAC,CAAE;QAAC,QAAQ,EAAI,IAAK;QAAA,wBAClF;UAAQ,KAAK,EAAC,SAAS;UAAA,UAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAS,eACxC;UAAQ,KAAK,EAAC,WAAW;UAAA,UAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAS,eAC5C;UAAQ,KAAK,EAAC,aAAa;UAAA,UAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QAC3C;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,eACR;MAAA,WAAO,eACH,uBAAC,OAAO;QAAC,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAGJ,CAAC,IAAKL,OAAO,CAAC;UAAC,GAAGD,IAAI;UAAEW,IAAI,EAAEL,CAAC,CAACG,MAAM,CAACC;QAAK,CAAC,CAAE;QAAC,QAAQ,EAAI;MAAK;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/F,eACR,QAAC,QAAQ;MAAC,OAAO,EAAEL,UAAW;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAW;EAAA;IAAA;IAAA;IAAA;EAAA,QAElD;AAEf,CAAC;AAAC,GAhDIP,QAAQ;AAAA,KAARA,QAAQ;AAkDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}