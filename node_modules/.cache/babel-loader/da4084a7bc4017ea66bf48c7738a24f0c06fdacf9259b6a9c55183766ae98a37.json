{"ast":null,"code":"var _jsxFileName = \"/Users/viktorbelakov/Documents/Develop/tasks/src/App.js\",\n  _s = $RefreshSig$();\nimport { useMemo, useState } from \"react\";\nimport TasksList from \"./сomponents/TasksList\";\nimport './styles/App.css';\nimport MyInput from \"./сomponents/UI/input/MyInput\";\nimport MyButton from \"./сomponents/UI/button/MyButton\";\nimport TaskForm from \"./сomponents/TaskForm\";\nimport MySelect from \"./сomponents/UI/select/MySelect\";\nimport TaskFilter from \"./сomponents/TaskFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    date: '2023-01-01',\n    status: 'completed',\n    title: 'Task 1',\n    body: 'Task Body 1'\n  }, {\n    id: 2,\n    date: '2023-02-02',\n    status: 'in progress',\n    title: 'Task 2',\n    body: 'Task Body 2'\n  }, {\n    id: 3,\n    date: '2023-03-03',\n    status: 'pending',\n    title: 'Task 3',\n    body: 'Task Body 3'\n  }, {\n    id: 4,\n    date: '2023-04-04',\n    status: 'completed',\n    title: 'TEST',\n    body: 'Task Body 4'\n  }]);\n  const [selectedSort, setSelectedSort] = useState('');\n  const [filter, setFilter] = useState({\n    date: '',\n    status: '',\n    sort: ''\n  });\n  const sortedTasks = useMemo(() => {\n    if (selectedSort) {\n      if (selectedSort !== 'date') {\n        return [...tasks].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]));\n      } else {\n        return [...tasks].sort((a, b) => new Date(a[selectedSort]) - new Date(b[selectedSort]));\n      }\n    } else {\n      return tasks;\n    }\n  }, [selectedSort, tasks]);\n  const sortTasks = sort => {\n    setSelectedSort(sort);\n  };\n  const createTask = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n  const handleDelete = taskId => {\n    const dueDate = new Date(tasks.find(task => task.id === taskId).date);\n    const today = new Date();\n    if (dueDate > today.setDate(today.getDate() + 6) || dueDate < today) {\n      const updatedTasks = tasks.filter(task => task.id !== taskId);\n      setTasks(updatedTasks);\n    } else {\n      alert(\"Task can't be deleted as it's due date is less than 6 days from today.\");\n    }\n  };\n\n  // const filterTasks = () => {\n  //     let filteredTasks = [...tasks];\n  //     if (filter.date) { console.log(filter.date)\n  //         filteredTasks = filteredTasks.filter((task) => task.date <= filter.date);\n  //     }\n  //     if (filter.status) {\n  //         filteredTasks = filteredTasks.filter((task) => task.status === filter.status);\n  //     }\n  //     setTasks(filteredTasks);\n  // };\n  const filteredSortTasks = useMemo(() => {\n    let filteredTasks = sortedTasks;\n    if (filter.date) {\n      console.log(filter.date);\n      filteredTasks = filteredTasks.filter(task => task.date <= filter.date);\n    }\n    if (filter.status) {\n      filteredTasks = filteredTasks.filter(task => task.status === filter.status);\n    }\n    return filteredTasks;\n  }, [sortedTasks, filter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      create: createTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskFilter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), tasks.length !== 0 ? /*#__PURE__*/_jsxDEV(TasksList, {\n      remove: handleDelete,\n      tasks: filteredSortTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"No tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"jrJd8b5SVtbDxfNYgnTV/S2I7/w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useMemo","useState","TasksList","MyInput","MyButton","TaskForm","MySelect","TaskFilter","App","tasks","setTasks","id","date","status","title","body","selectedSort","setSelectedSort","filter","setFilter","sort","sortedTasks","a","b","localeCompare","Date","sortTasks","createTask","newTask","handleDelete","taskId","dueDate","find","task","today","setDate","getDate","updatedTasks","alert","filteredSortTasks","filteredTasks","console","log","length","textAlign"],"sources":["/Users/viktorbelakov/Documents/Develop/tasks/src/App.js"],"sourcesContent":["import {useMemo, useState} from \"react\";\nimport TasksList from \"./сomponents/TasksList\";\nimport './styles/App.css'\nimport MyInput from \"./сomponents/UI/input/MyInput\";\nimport MyButton from \"./сomponents/UI/button/MyButton\";\nimport TaskForm from \"./сomponents/TaskForm\";\nimport MySelect from \"./сomponents/UI/select/MySelect\";\nimport TaskFilter from \"./сomponents/TaskFilter\";\n\nfunction App() {\n\n    const [tasks, setTasks] = useState([\n        {id: 1, date: '2023-01-01', status: 'completed', title: 'Task 1', body: 'Task Body 1'},\n        {id: 2, date: '2023-02-02', status: 'in progress', title: 'Task 2', body: 'Task Body 2'},\n        {id: 3, date: '2023-03-03', status: 'pending', title: 'Task 3', body: 'Task Body 3'},\n        {id: 4, date: '2023-04-04', status: 'completed', title: 'TEST', body: 'Task Body 4'},\n    ]);\n\n    const [selectedSort, setSelectedSort] = useState('');\n\n    const [filter, setFilter] = useState({ date: '', status: '', sort: '' });\n\n    const sortedTasks = useMemo(()=> {\n        if (selectedSort) {\n            if(selectedSort !== 'date'){\n                return [...tasks].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]))\n            }else{\n                return [...tasks].sort((a, b) => new Date(a[selectedSort]) - new Date(b[selectedSort]))\n            }\n        } else {\n            return tasks;\n        }\n    }, [selectedSort, tasks])\n\n    const sortTasks = (sort) => {\n        setSelectedSort(sort)\n    }\n\n    const createTask = (newTask) => {\n        setTasks([...tasks, newTask])\n    }\n\n    const handleDelete = (taskId) => {\n        const dueDate = new Date(tasks.find((task) => task.id === taskId).date);\n        const today = new Date();\n        if (dueDate > today.setDate(today.getDate() + 6) || dueDate < today) {\n            const updatedTasks = tasks.filter((task) => task.id !== taskId);\n            setTasks(updatedTasks);\n        } else {\n            alert(\"Task can't be deleted as it's due date is less than 6 days from today.\");\n        }\n    };\n\n    // const filterTasks = () => {\n    //     let filteredTasks = [...tasks];\n    //     if (filter.date) { console.log(filter.date)\n    //         filteredTasks = filteredTasks.filter((task) => task.date <= filter.date);\n    //     }\n    //     if (filter.status) {\n    //         filteredTasks = filteredTasks.filter((task) => task.status === filter.status);\n    //     }\n    //     setTasks(filteredTasks);\n    // };\n    const filteredSortTasks = useMemo(()=> {\n        let filteredTasks = sortedTasks;\n            if (filter.date) { console.log(filter.date)\n                filteredTasks = filteredTasks.filter((task) => task.date <= filter.date);\n            }\n            if (filter.status) {\n                filteredTasks = filteredTasks.filter((task) => task.status === filter.status);\n            }\n        return filteredTasks;\n    }, [sortedTasks, filter])\n\n\n    return (\n        <div>\n            <TaskForm create={createTask}></TaskForm>\n\n            <TaskFilter></TaskFilter>\n\n            {tasks.length !== 0\n                ? <TasksList remove={handleDelete} tasks={filteredSortTasks}/>\n                : <h1 style={{textAlign: \"center\"}}>No tasks</h1>\n            }\n\n        </div>\n    );\n\n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}