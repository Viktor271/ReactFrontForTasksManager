{"ast":null,"code":"var _jsxFileName = \"/Users/viktorbelakov/Documents/Develop/tasks/src/\\u0441omponents/TaskForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport input from \"./UI/input/MyInput\";\nimport MyButton from \"./UI/button/MyButton\";\nimport { useForm } from \"react-hook-form\";\nimport { InputLabel, Input } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = _ref => {\n  _s();\n  var _errors$title, _errors$body, _errors$status, _errors$date;\n  let {\n    create\n  } = _ref;\n  const [task, setTask] = useState({\n    title: '',\n    body: '',\n    status: '',\n    date: ''\n  });\n  const {\n    register,\n    formState: {\n      errors,\n      isValid\n    },\n    handleSubmit,\n    reset\n  } = useForm();\n  const onSubmit = () => {\n    const newTask = {\n      ...task\n    };\n    create(newTask);\n    setTask({\n      title: '',\n      body: '',\n      status: '',\n      date: ''\n    });\n    reset();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      children: \"Task name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      ...register(\"title\", {\n        required: \"this field is required\"\n      }),\n      value: task.title,\n      onChange: e => setTask({\n        ...task,\n        title: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"Task name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 40\n      },\n      children: (errors === null || errors === void 0 ? void 0 : errors.title) && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (errors === null || errors === void 0 ? void 0 : (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message) || \"Error!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 60\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n      children: \"Task description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      ...register(\"body\", {\n        required: \"this field is required\"\n      }),\n      value: task.body,\n      onChange: e => setTask({\n        ...task,\n        body: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"Task description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 40\n      },\n      children: (errors === null || errors === void 0 ? void 0 : errors.body) && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (errors === null || errors === void 0 ? void 0 : (_errors$body = errors.body) === null || _errors$body === void 0 ? void 0 : _errors$body.message) || \"Error!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 59\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n      children: \"Task status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      ...register(\"status\", {\n        required: \"this field is required\"\n      }),\n      onChange: e => setTask({\n        ...task,\n        status: e.target.value\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        selected: true,\n        disabled: true,\n        hidden: true,\n        children: \"Choose status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pending\",\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"completed\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"in progress\",\n        children: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 40\n      },\n      children: (errors === null || errors === void 0 ? void 0 : errors.status) && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (errors === null || errors === void 0 ? void 0 : (_errors$status = errors.status) === null || _errors$status === void 0 ? void 0 : _errors$status.message) || \"Error!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n      children: \"Task deadline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ...register(\"date\", {\n        required: \"this field is required\"\n      }),\n      type: \"date\",\n      onChange: e => setTask({\n        ...task,\n        date: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 40\n      },\n      children: (errors === null || errors === void 0 ? void 0 : errors.date) && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (errors === null || errors === void 0 ? void 0 : (_errors$date = errors.date) === null || _errors$date === void 0 ? void 0 : _errors$date.message) || \"Error!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 55\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      type: \"submit\",\n      variant: \"contained\",\n      children: \"Create task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"DWuLtLDWytWFWYAi5jZLJ/nLpi0=\", false, function () {\n  return [useForm];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","input","MyButton","useForm","InputLabel","Input","TaskForm","create","task","setTask","title","body","status","date","register","formState","errors","isValid","handleSubmit","reset","onSubmit","newTask","required","e","target","value","height","message"],"sources":["/Users/viktorbelakov/Documents/Develop/tasks/src/сomponents/TaskForm.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport input from \"./UI/input/MyInput\";\nimport MyButton from \"./UI/button/MyButton\";\nimport {useForm} from \"react-hook-form\";\nimport {InputLabel, Input} from \"@mui/material\";\n\n\nconst TaskForm = ({create}) => {\n\n    const [task, setTask] = useState({title: '', body: '', status: '', date:''});\n\n    const {\n        register, formState: {\n            errors, isValid\n        }, handleSubmit, reset\n    } = useForm();\n\n    const onSubmit = () => {\n        const newTask = {\n            ...task\n        }\n        create(newTask)\n\n        setTask({title: '', body: '', status: '', date:''})\n        reset();\n    }\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit) }>\n            <InputLabel>Task name</InputLabel>\n                <Input\n                    {...register(\"title\", {required: \"this field is required\"})}\n                    value={task.title}\n                    onChange={e => setTask({...task, title: e.target.value})}\n                    type=\"text\"\n                    placeholder=\"Task name\"\n\n                ></Input>\n\n                <div style={{height:40}}>{errors?.title && <p>{errors?.title?.message || \"Error!\"}</p>}</div>\n            <InputLabel>Task description</InputLabel>\n                <Input\n                    {...register(\"body\", {required: \"this field is required\"})}\n                    value={task.body}\n                    onChange={e => setTask({...task, body: e.target.value})}\n                    type=\"text\"\n                    placeholder=\"Task description\"\n\n                ></Input>\n\n                <div style={{height:40}}>{errors?.body && <p>{errors?.body?.message || \"Error!\"}</p>}</div>\n            <InputLabel>Task status</InputLabel>\n                <select\n                    {...register(\"status\", {required: \"this field is required\"})}\n                    onChange={(e) => setTask({...task, status: e.target.value})\n                }>\n                    <option value=\"\" selected disabled hidden>Choose status</option>\n                    <option value=\"pending\">Pending</option>\n                    <option value=\"completed\">Completed</option>\n                    <option value=\"in progress\">In Progress</option>\n                </select>\n\n            <div style={{height:40}}>{errors?.status && <p>{errors?.status?.message || \"Error!\"}</p>}</div>\n            <InputLabel>Task deadline</InputLabel>\n                <input\n                    {...register(\"date\", {required: \"this field is required\"})}\n                    type=\"date\"\n                    onChange={(e) => setTask({...task, date: e.target.value})}\n                />\n\n            <div style={{height:40}}>{errors?.date && <p>{errors?.date?.message || \"Error!\"}</p>}</div>\n\n            <MyButton type=\"submit\" variant=\"contained\">Create task</MyButton>\n\n        </form>\n    );\n};\n\nexport default TaskForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}